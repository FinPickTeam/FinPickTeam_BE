plugins {
  id 'java'
  id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
  springVersion = '5.3.37'
  lombokVersion = '1.18.30'
  springSecurityVersion = '5.8.13'
  log4j2Version = '2.24.1'
}

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

// ✅ Swagger UI를 위한 별도 configuration 정의
configurations {
  swaggerUI
}

dependencies {
  // Spring
  implementation("org.springframework:spring-context:${springVersion}") {
    exclude group: 'commons-logging', module: 'commons-logging'
  }
  implementation "org.springframework:spring-webmvc:${springVersion}"
  implementation 'javax.inject:javax.inject:1'

  // DB
  implementation 'com.mysql:mysql-connector-j:8.1.0'
  implementation 'com.zaxxer:HikariCP:2.7.4'
  implementation "org.springframework:spring-tx:${springVersion}"
  implementation "org.springframework:spring-jdbc:${springVersion}"

  // MyBatis
  implementation 'org.mybatis:mybatis:3.4.6'
  implementation 'org.mybatis:mybatis-spring:1.3.2'

  // AOP
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // Servlet/JSP
  implementation 'javax.servlet:javax.servlet-api:4.0.1'
  compileOnly 'javax.servlet.jsp:jsp-api:2.1'
  implementation 'javax.servlet:jstl:1.2'

  // Logging
  implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
  implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
  implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}"
  implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

  // 기타
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
  implementation 'xerces:xercesImpl:2.12.2'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

  // Lombok
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  // Test
  testImplementation "org.springframework:spring-test:${springVersion}"
  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

  // Security
  implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
  implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
  implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"
  implementation "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"

  // JWT
  implementation "io.jsonwebtoken:jjwt-api:0.11.5"
  runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
  implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"

  // Swagger
  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  // dotenv
  implementation 'io.github.cdimascio:dotenv-java:3.2.0'

  // Redis
  implementation 'org.springframework.data:spring-data-redis:2.7.18'
  implementation 'io.lettuce:lettuce-core:6.1.10.RELEASE'

  // ✅ Swagger UI WebJar 리소스를 수동으로 추가
  add("swaggerUI", "org.webjars:swagger-ui:3.52.5")
}

// ✅ 정적 리소스 복사 작업 (최신 Gradle 스타일)
tasks.register("copySwaggerUI", Copy) {
  from(configurations.swaggerUI.collect { zipTree(it) }) {
    include 'META-INF/resources/**'
  }
  into layout.buildDirectory.dir("resources/main/static")
}

tasks.named("processResources") {
  dependsOn("copySwaggerUI")
}

test {
  useJUnitPlatform()
}
