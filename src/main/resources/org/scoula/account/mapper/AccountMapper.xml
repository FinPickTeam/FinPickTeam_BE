<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.account.mapper.AccountMapper">

    <!-- 1. 계좌 등록 -->
    <insert id="insert" parameterType="org.scoula.account.domain.Account"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO account (
            user_id,
            pin_account_number,
            bank_code,
            account_number,
            product_name,
            account_type,
            balance,
            is_active
        ) VALUES (
                     #{userId},
                     #{pinAccountNumber},
                     #{bankCode},
                     #{accountNumber},
                     #{productName},
                     #{accountType},
                     #{balance}, TRUE
                 )
    </insert>

    <!-- 2. 잔액 업데이트 -->
    <update id="updateBalanceByUser">
        UPDATE account
        SET balance = #{balance}
        WHERE user_id = #{userId}
          AND pin_account_number = #{pinAccountNumber}
    </update>

    <select id="findById" resultType="org.scoula.account.domain.Account">
        SELECT *
        FROM account
        WHERE id = #{accountId}
    </select>

    <select id="countByUserAndType" resultType="int">
        SELECT COUNT(1) FROM account WHERE user_id=#{userId} AND account_type=#{type} AND is_active = TRUE
    </select>

    <select id="findActiveByUserId" resultType="org.scoula.account.domain.Account">
        SELECT id, user_id, pin_account_number, bank_code, account_number,
               product_name, account_type, balance, created_at
        FROM account
        WHERE user_id = #{userId}
          AND is_active = TRUE
    </select>

    <update id="updateIsActive">
        UPDATE account
        SET is_active = #{isActive}
        WHERE id = #{id}
    </update>

    <select id="findByIdList" resultType="org.scoula.account.domain.Account">
        SELECT * FROM account
        WHERE is_active = TRUE
        AND id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="sumBalanceByUserId" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(balance), 0)
        FROM account
        WHERE user_id = #{userId}
          AND is_active = TRUE
    </select>

    <select id="countByUserAndProductName" resultType="int">
        SELECT COUNT(*) FROM account
        WHERE user_id = #{userId}
          AND is_active = 1
          AND product_name = #{productName}
    </select>

    <select id="findProductNamesByUser" resultType="string">
        SELECT product_name FROM account
        WHERE user_id = #{userId} AND is_active = 1
    </select>

</mapper>
